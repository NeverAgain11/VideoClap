platform :ios, '9.0'

source 'https://github.com/CocoaPods/Specs.git'

target 'VideoClap_Example' do
  use_frameworks!
  
  pod 'VideoClap', :path => '../'
  pod 'SSPlayer', :git => 'https://github.com/lai001/SSPlayer.git'
#  pod 'SDWebImage'
  pod 'SnapKit', '4.2.0'
  
  pod 'SwiftyBeaver'
  pod 'FLAnimatedImage', '~> 1.0'
end

def config_rule(new_rule, file_patterns, output_files, script)
  new_rule.name = "Files '#{file_patterns}' using Script"
  new_rule.compiler_spec = 'com.apple.compilers.proxy.script'
  new_rule.file_patterns = file_patterns
  new_rule.file_type = 'pattern.proxy'
  new_rule.is_editable = '1'
  new_rule.output_files = output_files
  new_rule.input_files = []
  new_rule.output_files_compiler_flags = []
  new_rule.script = script
  new_rule.run_once_per_architecture = '0'
end

def add_build_rule(target_name, project)
  project.targets.each do |target|
    if target.name == target_name
      puts "Updating #{target.name} rules"
      new_rule0 = project.new(Xcodeproj::Project::Object::PBXBuildRule)
      config_rule(new_rule0,
                  '*.ci.metal',
                  ["$(DERIVED_FILE_DIR)/${INPUT_FILE_BASE}.air"],
                  "xcrun metal -c -fcikernel \"${INPUT_FILE_PATH}\" -o \"${SCRIPT_OUTPUT_FILE_0}\"\n")
      new_rule1 = project.new(Xcodeproj::Project::Object::PBXBuildRule)
      config_rule(new_rule1,
                  '*.ci.air',
                  ["$(METAL_LIBRARY_OUTPUT_DIR)/$(INPUT_FILE_BASE).metallib"],
                  "xcrun metallib -cikernel \"${INPUT_FILE_PATH}\" -o \"${SCRIPT_OUTPUT_FILE_0}\"\n")
                  
      target.build_rules.append(new_rule0)
      target.build_rules.append(new_rule1)
      project.objects_by_uuid[new_rule0.uuid] = new_rule0
      project.objects_by_uuid[new_rule1.uuid] = new_rule1
      project.save()
    end
  end
end

post_install do |installer|
    add_build_rule("VideoClap", installer.pods_project)
end
